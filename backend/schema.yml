openapi: 3.0.3
info:
  title: EasyRent API
  version: 0.0.0
paths:
  /api/auth/login/:
    post:
      operationId: login_user
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: Logged in
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  /api/auth/logout/:
    post:
      operationId: logout_user
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: Logged out
  /api/auth/register-company/:
    post:
      operationId: register_company
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterCompany'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: Email confirmation request sent
        '400':
          description: Bad Request
        '500':
          description: Email confirmation request failed
  /api/auth/register-user/:
    post:
      operationId: register_user
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: Email confirmation request sent
        '400':
          description: Bad Request
        '500':
          description: Email confirmation request failed
  /api/auth/user-info/:
    get:
      operationId: user_info
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
        '500':
          description: No rentoid or dealership to match user
  /api/home/offer/{offer_id}/:
    get:
      operationId: api_home_offer_retrieve
      parameters:
      - in: path
        name: offer_id
        schema:
          type: string
        required: true
      tags:
      - home
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferDetails'
          description: ''
        '404':
          description: Offer Not Found
  /api/home/showcased/:
    get:
      operationId: api_home_showcased_retrieve
      tags:
      - home
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/profile/user/delete/:
    delete:
      operationId: delete_user
      tags:
      - profile
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: Password is required
        '401':
          description: User not authenticated
        '403':
          description: Incorrect password
  /api/profile/user/info/:
    get:
      operationId: get_user_info
      tags:
      - profile
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserInfo'
          description: ''
        '401':
          description: User not authenticated
    put:
      operationId: update_user_info
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PutUserInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PutUserInfo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: User info updated successfully
        '400':
          description: Invalid input
        '401':
          description: User not authenticated
        '403':
          description: Incorrect password
  /api/profile/user/pass/:
    put:
      operationId: update_user_password
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PutUserPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PutUserPassword'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: Password updated successfully
        '400':
          description: Invalid input
        '401':
          description: User not authenticated
        '403':
          description: Incorrect password
  /api/profile/user/rentals/:
    get:
      operationId: get_user_rentals
      tags:
      - profile
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUserRentals'
          description: ''
        '401':
          description: User not authenticated
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    GetUserInfo:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNo:
          type: string
        driversLicense:
          type: string
      required:
      - driversLicense
      - firstName
      - lastName
      - phoneNo
    GetUserRentals:
      type: object
      properties:
        makeName:
          type: string
        modelName:
          type: string
        companyName:
          type: string
        noOfSeats:
          type: integer
        automatic:
          type: boolean
        price:
          type: number
          format: double
          default: 0.1
        rating:
          type: number
          format: double
          default: 0.1
        noOfReviews:
          type: integer
        dateTimeRented:
          type: string
          format: date-time
        dateTimeReturned:
          type: string
          format: date-time
        expired:
          type: boolean
        canReview:
          type: boolean
        offer_id:
          type: integer
        image:
          type: string
          format: uri
          default: null
      required:
      - automatic
      - canReview
      - companyName
      - dateTimeRented
      - dateTimeReturned
      - expired
      - makeName
      - modelName
      - noOfReviews
      - noOfSeats
      - offer_id
    LoginUser:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    OfferDetails:
      type: object
      properties:
        image:
          type: string
          default: base64
        makeName:
          type: string
        modelName:
          type: string
        companyName:
          type: string
        dealership_id:
          type: integer
        noOfSeats:
          type: integer
        modelType:
          type: string
        automatic:
          type: boolean
        price:
          type: number
          format: double
          default: 0.1
        rating:
          type: number
          format: double
          default: 0.1
        noOfReviews:
          type: integer
        companyLogo:
          type: string
          default: base64
        description:
          type: string
        canReview:
          type: boolean
      required:
      - automatic
      - canReview
      - companyName
      - dealership_id
      - description
      - makeName
      - modelName
      - modelType
      - noOfReviews
      - noOfSeats
    PutUserInfo:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNo:
          type: string
        driversLicense:
          type: string
        password:
          type: string
      required:
      - driversLicense
      - firstName
      - lastName
      - password
      - phoneNo
    PutUserPassword:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
      - newPassword
      - oldPassword
    RegisterCompany:
      type: object
      properties:
        email:
          type: string
          format: email
        companyName:
          type: string
        tin:
          type: string
        phoneNo:
          type: string
        countryName:
          type: string
        cityName:
          type: string
        streetName:
          type: string
        streetNo:
          type: string
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          default: '0.100000'
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          default: '0.100000'
        workingHours:
          type: array
          items:
            $ref: '#/components/schemas/WorkingHours'
        description:
          type: string
        password:
          type: string
        image:
          type: string
          format: uri
          default: null
      required:
      - cityName
      - companyName
      - countryName
      - description
      - email
      - password
      - phoneNo
      - streetName
      - streetNo
      - tin
      - workingHours
    RegisterUser:
      type: object
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        driversLicense:
          type: string
        phoneNo:
          type: string
        password:
          type: string
      required:
      - driversLicense
      - email
      - firstName
      - lastName
      - password
      - phoneNo
    UserInfo:
      type: object
      properties:
        role:
          type: string
          default: guest/user/company
        name:
          type: string
          default: name if not guest, balance only for user
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          default: '1.00'
    WorkingHours:
      type: object
      properties:
        day:
          type: string
          default: mon=monday, leave out the day if the dealership is closed
        startTime:
          type: string
        endTime:
          type: string
      required:
      - endTime
      - startTime
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
